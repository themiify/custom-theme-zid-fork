name: Universal Branch Sync

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: "0 0 * * *"  # ŸäŸàŸÖŸäŸãÿß ŸÅŸä ŸÖŸÜÿ™ÿµŸÅ ÿßŸÑŸÑŸäŸÑ UTC
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to sync (leave empty for current)'
        required: false
        default: ''

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    steps:
      - name: ‚úÖ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ÿ¨ŸÑÿ® ŸÉŸÑ ÿßŸÑÿ™ÿßÿ±ŸäÿÆ
          token: ${{ secrets.GH_PAT }}

      - name: üîß Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: üîó Add Upstream Repository
        run: |
          git remote add upstream https://github.com/zidsa/custom-theme-sample.git || true
          git fetch upstream
          
      - name: üîÑ Sync Main with Upstream (Zid)
        run: |
          git checkout main
          git merge upstream/main --no-edit || git merge --abort
          git push origin main

      - name: üîç Determine Current Branch
        id: branch
        run: |
          if [[ "${{ github.event.inputs.branch }}" != "" ]]; then
            echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          elif [[ "${{ github.head_ref }}" != "" ]]; then
            echo "BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
          else
            BRANCH=${GITHUB_REF#refs/heads/}
            echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          fi

      - name: üîÑ Sync Feature Branches with Main
        run: |
          for branch in $(git branch -r | grep -v 'origin/main' | grep -v 'HEAD' | sed 's/origin\///'); do
            echo "Checking branch: $branch"
            if [[ "$branch" != "main" && "$branch" != "HEAD" ]]; then
              git checkout $branch || continue
              git pull origin $branch || continue
              
              if git merge main --no-commit --no-ff > /dev/null 2>&1; then
                git commit -m "Merge main into $branch [automated]"
                git push origin $branch
                echo "‚úÖ Updated $branch with latest main"
              else
                git merge --abort
                echo "‚ö†Ô∏è Merge conflict in $branch - manual resolution required"
              fi
            fi
          done
